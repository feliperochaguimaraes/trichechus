// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trichechus.Infrastructure.Context;

#nullable disable

namespace Trichechus.Infrastructure.Migrations
{
    [DbContext(typeof(TrichechusDbContext))]
    [Migration("20250521154704_v6")]
    partial class v6
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Trichechus.Domain.Entities.Atividade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("AtualizadoEm");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("CriadoEm");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DeletadoEm");

                    b.Property<string>("Descricao")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeEquipeResponsavel")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Prazo")
                        .HasColumnType("DateTime2")
                        .HasColumnName("Prazo");

                    b.Property<string>("Situacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("TipoEntrada")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Trichechus.Domain.Entities.Tarefa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AtividadeId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("AtualizadoEm");

                    b.Property<DateTime>("CriadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("CriadoEm");

                    b.Property<DateTime?>("DeletadoEm")
                        .HasColumnType("DateTime2")
                        .HasColumnName("DeletadoEm");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("TEXT");

                    b.Property<string>("Observacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("Prazo")
                        .HasColumnType("DateTime2")
                        .HasColumnName("Prazo");

                    b.Property<string>("Situacao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AtividadeId");

                    b.ToTable("Tarefas");
                });

            modelBuilder.Entity("Trichechus.Domain.Entities.Tarefa", b =>
                {
                    b.HasOne("Trichechus.Domain.Entities.Atividade", "Atividade")
                        .WithMany("Tarefas")
                        .HasForeignKey("AtividadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Atividade");
                });

            modelBuilder.Entity("Trichechus.Domain.Entities.Atividade", b =>
                {
                    b.Navigation("Tarefas");
                });
#pragma warning restore 612, 618
        }
    }
}
