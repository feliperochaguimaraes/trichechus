<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Trichechus.API</name>
    </assembly>
    <members>
        <member name="M:Trichechus.API.Controllers.AtividadesController.GetAll">
            <summary>
            Obtém todas as atividades
            </summary>
            <returns>Lista de atividades</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.AtividadesController.GetById(System.Guid)">
            <summary>
            Obtém uma atividade pelo ID
            </summary>
            <param name="id">ID da atividade</param>
            <returns>Dados da atividade</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.AtividadesController.Create(Trichechus.Application.DTOs.CreateAtividadeDto)">
            <summary>
            Cria uma nova atividade
            </summary>
            <param name="dto">Dados da atividade</param>
            <returns>ID da atividade criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.AtividadesController.Update(System.Guid,Trichechus.Application.DTOs.UpdateAtividadeDto)">
            <summary>
            Atualiza uma atividade existente
            </summary>
            <param name="id">ID da atividade</param>
            <param name="dto">Novos dados da atividade</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.AtividadesController.Delete(System.Guid)">
            <summary>
            Remove uma atividade
            </summary>
            <param name="id">ID da atividade</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.CatalogoController.GetAll">
            <summary>
            Obtém todos os catalogoes
            </summary>
            <returns>Lista de Catalogoes</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.CatalogoController.GetById(System.Guid)">
            <summary>
            Obtém uma catalogo pelo ID
            </summary>
            <param name="id">ID do catalogo</param>
            <returns>Dados do catalogo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.CatalogoController.Create(Trichechus.Application.DTOs.CreateCatalogoDto)">
            <summary>
            Cria uma nova catalogo
            </summary>
            <param name="dto">Dados do catalogo</param>
            <returns>ID do catalogo criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.CatalogoController.Update(System.Guid,Trichechus.Application.DTOs.UpdateCatalogoDto)">
            <summary>
            Atualiza um catalogo existente
            </summary>
            <param name="id">ID do catalogo</param>
            <param name="dto">Novos dados do catalogo</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.CatalogoController.Delete(System.Guid)">
            <summary>
            Remove um catalogo
            </summary>
            <param name="id">ID do catalogo</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.ContratoController.GetAll">
            <summary>
            Obtém todos os contratoes
            </summary>
            <returns>Lista de Contratoes</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.ContratoController.GetById(System.Guid)">
            <summary>
            Obtém uma contrato pelo ID
            </summary>
            <param name="id">ID do contrato</param>
            <returns>Dados do contrato</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.ContratoController.Create(Trichechus.Application.DTOs.CreateContratoDto)">
            <summary>
            Cria uma nova contrato
            </summary>
            <param name="dto">Dados do contrato</param>
            <returns>ID do contrato criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.ContratoController.Update(System.Guid,Trichechus.Application.DTOs.UpdateContratoDto)">
            <summary>
            Atualiza um contrato existente
            </summary>
            <param name="id">ID do contrato</param>
            <param name="dto">Novos dados do contrato</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.ContratoController.Delete(System.Guid)">
            <summary>
            Remove um contrato
            </summary>
            <param name="id">ID do contrato</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.FornecedorController.GetAll">
            <summary>
            Obtém todos os fornecedores
            </summary>
            <returns>Lista de Fornecedores</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.FornecedorController.GetById(System.Guid)">
            <summary>
            Obtém uma fornecedor pelo ID
            </summary>
            <param name="id">ID do fornecedor</param>
            <returns>Dados do fornecedor</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.FornecedorController.Create(Trichechus.Application.DTOs.CreateFornecedorDto)">
            <summary>
            Cria uma nova fornecedor
            </summary>
            <param name="dto">Dados do fornecedor</param>
            <returns>ID do fornecedor criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.FornecedorController.Update(System.Guid,Trichechus.Application.DTOs.UpdateFornecedorDto)">
            <summary>
            Atualiza um fornecedor existente
            </summary>
            <param name="id">ID do fornecedor</param>
            <param name="dto">Novos dados do fornecedor</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.FornecedorController.Delete(System.Guid)">
            <summary>
            Remove um fornecedor
            </summary>
            <param name="id">ID do fornecedor</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.LocalAutenticacaoController.RegistrarLocal(Trichechus.Application.DTOs.RegistroUsuarioLocalDTO)">
            <summary>
            Registra um novo usuário localmente no Trichechus
            </summary>
        </member>
        <member name="M:Trichechus.API.Controllers.LocalAutenticacaoController.LoginLocal(Trichechus.Application.DTOs.LoginUsuarioDTO)">
            <summary>
            Realiza login de usuário local do Trichechus
            </summary>
        </member>
        <member name="M:Trichechus.API.Controllers.SGAAutenticacaoController.Login(Trichechus.Application.DTOs.LoginUsuarioDTO)">
            <summary>
            Realiza login de usuário via SGA
            </summary>
        </member>
        <member name="M:Trichechus.API.Controllers.SoftwareController.GetAll">
            <summary>
            Obtém todos os softwarees
            </summary>
            <returns>Lista de Softwarees</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.SoftwareController.GetById(System.Guid)">
            <summary>
            Obtém uma software pelo ID
            </summary>
            <param name="id">ID do software</param>
            <returns>Dados do software</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.SoftwareController.Create(Trichechus.Application.DTOs.CreateSoftwareDto)">
            <summary>
            Cria uma nova software
            </summary>
            <param name="dto">Dados do software</param>
            <returns>ID do software criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.SoftwareController.Update(System.Guid,Trichechus.Application.DTOs.UpdateSoftwareDto)">
            <summary>
            Atualiza um software existente
            </summary>
            <param name="id">ID do software</param>
            <param name="dto">Novos dados do software</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.SoftwareController.Delete(System.Guid)">
            <summary>
            Remove um software
            </summary>
            <param name="id">ID do software</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.GetAll">
            <summary>
            Obtém todas as tarefas
            </summary>
            <returns>Lista de tarefas</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.GetById(System.Guid)">
            <summary>
            Obtém uma tarefa pelo ID
            </summary>
            <param name="id">ID da tarefa</param>
            <returns>Dados da tarefa</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.GetByAtividadeId(System.Guid)">
            <summary>
            Obtém todas as tarefas pelo ID da atividade
            </summary>
            <param atividadeId="atividadeId">ID da atividade</param>
            <returns>Dados das tarefas</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.Create(Trichechus.Application.DTOs.CreateTarefaDto)">
            <summary>
            Cria uma nova tarefa
            </summary>
            <param name="dto">Dados da tarefa</param>
            <returns>ID da tarefa criada</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.Update(System.Guid,Trichechus.Application.DTOs.UpdateTarefaDto)">
            <summary>
            Atualiza uma tarefa existente
            </summary>
            <param name="id">ID da tarefa</param>
            <param name="dto">Novos dados da tarefa</param>
            <returns>Nenhum conteúdo</returns>
        </member>
        <member name="M:Trichechus.API.Controllers.TarefasController.Delete(System.Guid)">
            <summary>
            Remove uma tarefa
            </summary>
            <param name="id">ID da tarefa</param>
            <returns>Nenhum conteúdo</returns>
        </member>
    </members>
</doc>
